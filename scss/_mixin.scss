/// Mixin que cambia el contenido de un elemento de acuerdo a un breakpoint
/// @example
/// .container{
///    @include response(xl){
///       background-color: getColor(secondary);
///   }
/// }
/// @param {string} $breakpoint -- Nombre del breakpoint
///
@mixin response($breakpoint){
    @if($breakpoint == xl){
        @media (min-width: 1200px){
            @content;
        }
    }
    @else if($breakpoint == lg){
        @media (min-width: 992px){
            @content;
        }
    }
    @else if($breakpoint == md){
        @media (min-width: 768px){
            @content;
        }
    }
    @else if($breakpoint == sm){
        @media (min-width: 576px){
            @content;
        }
    }
    @else if($breakpoint == xs){
        @media (min-width: 0px){
            @content;
        }
    } 
}


/// Mixin para el menú de navegación
/// @example
/// .navigation{
///   @include navigation();
/// }
/// @param {boolean} $hamburger [false] -- Preparar el menú para el menú hamburguesa
/// 
@mixin navigation($hamburger: false){
  @include flex($direction: row, $justify: space-between, $align: center);
  
  @if $hamburger {
    &-list {
      @include flex(column, center, center, 10rem);
      position: fixed;
      width: 100%;
      height: 100%;
      background-color: darken(getColor(tertiary), 2%);
      top: 0.01rem;
      left: -200%;
      right: 0.01rem;
      text-align: center;
      transition: all 0.5s;
      gap: 5rem;
      z-index: 100;
    }
  } @else {
      &-list {
        @include flex($direction: row, $justify: space-around);
        position: inherit;
        align-items: center;
        height: 100%;
      }
    }
    

    &-hamburger{
      @include response(lg){
        display: none;
      }

      z-index: 200;
      display: block;
      font-size: getFontSize(md);
        cursor: pointer;

        &-lines{
          height: 2em;
          width: 2.5em;
      
          @include flex(column, space-between);
          
          border-radius: 50%;
          &-line{
              height: 0.2em;
              width: 100%;
              border-radius: 10px;
              background-color: getColor(primary);
  
              &-1{
                  transform-origin: 0% 0%;
                  transition: transform 0.4s ease-in-out;
              }
  
              &-2{
                  transition: transform 0.2s ease-in-out;
              }
  
              &-3{
                  transform-origin: 0% 100%;
                  transition: transform 0.4s ease-in-out;
              }
          }
      }
    }

    &-item{
        list-style: none;
    }

    &-link{
        color: getColor(primary);
        font-size: getFontSize(lg);
        text-decoration: none;
        transition: $transition;
        padding: 1rem 3rem 1rem 3rem;
        font-weight: getFontWeight(semi-bold);
        background-color: darken(getColor(tertiary), 2%);
        &:hover{
            color: getColor(tertiary);
            transition: $transition;
            background-color: getColor(quaternary);
        }
    }
    
    &-button{
        @include button();
    }
}









/// Mixin de posicionamiento con flexbox
/// @example
/// .container{
///    @include flex();
/// }
/// @param {string} $direction [row] -- Dirección del flexbox
/// @param {string} $justify [center]-- Justificación del contenido
/// @param {string} $align [center]-- Alineación del contenido
/// @param {string} $gap [0]-- Espacio entre elementos
///

@mixin flex($direction: row, $justify: center, $align: center, $gap: 0){
    display: flex;
    flex-flow: $direction wrap;
    justify-content: $justify;
    align-items: $align;
    gap: $gap;
}


/// Mixin para título de sección
/// @example
/// .opinions{
///  @include section_header();
/// }
@mixin section_header(){
    font-family: $font-family-logo;
    font-size: getFontSize(xl);
    font-weight: getFontWeight(bold);
    text-transform: uppercase;
    text-align: center;
    color: getColor(primary);
    padding-bottom: 7rem;

    word-spacing: 2rem;
    @include response(lg){
        font-size: getFontSize(xxxl);
    }
}

/// Mixin para inputs de cabecera
/// @example
/// .header-input{
///   @include input();
/// }
@mixin input(){
    color: getColor(white-text);
    background-color: darken(getColor(tertiary), 2%);
    border: 1px solid getColor(primary);
    border-radius: 0.5rem;
    @include response(xl){
      font-size: getFontSize(md);
    }
    font-size: getFontSize(sm);
    padding: 1rem 2rem;
    transition: $transition;
    &:focus{
        outline: none;
        border: 1px solid getColor(primary);
        transition: $transition;
    }
}


/// Mixin para inputs de formulario de contacto
/// @example
/// .contact-input{
///  @include contactInput();
/// }
/// @param {string} $size [xl] -- Tamaño del input
/// 
@mixin contactInput($size: xl){
    color: getColor(white-text);
    background-color: darken(getColor(tertiary), 2%);
    border: 1px solid getColor(primary);
    border-radius: 0.5rem;
    font-size: getFontSize($size);
    padding: 1rem 2rem;
    transition: $transition;
    resize: none;
    &:focus{
        outline: none;
        border: 1px solid lighten(getColor(primary), 20%);
        transition: $transition;
    }
}

/// Mixin para botones
/// @example
/// .button{
///   @include button();
/// }
/// @param {string} $size [lg] -- Tamaño del botón
@mixin button($size: lg){
    color: getColor(white-text);
    background-color: getColor(primary);
    font-size: getFontSize($size);
    transition: $transition;
    border: none;
    padding: 1rem 3rem 1rem 3rem;
    text-decoration: none;
    &:hover{
        cursor: pointer;
        background-color: darken(getColor(quaternary), 20%);
        transition: $transition;
    }
}


/// Mixin que aplica los paddings inicial y final de las secciones
/// @example
/// .section{
///  @include sectionPaddings();
/// }
/// 
@mixin sectionPaddings(){
    padding-top: 10rem;
    padding-bottom: 10rem;
}


/// Mixin para estrellas de valoración
/// @example
/// .opinions-stars{
///   @include stars();
/// }
/// @param {string} $size [xxxl] -- Tamaño de las estrellas
@mixin stars($size: xxxl){
    [data-star] {
        text-align: left;
        font-style: normal;
        font-size: getFontSize($size);
        display: inline-block;
        position: relative;
        unicode-bidi: bidi-override;
      }
      
      [data-star]::before {
        display: block;
        content: "★★★★★";
        color: #ddd;
      }
      
      [data-star]::after {
        position: absolute;
        top: 0;
        content: "★★★★★";
        width: 0;
        color: getColor(primary);
        overflow: hidden;
        height: 100%;
        display: flex;
      }
      
      [data-star^="0.1"]::after,
      [data-star^=".1"]::after {
        width: 2%;
      }
      [data-star^="0.2"]::after,
      [data-star^=".2"]::after {
        width: 4%;
      }
      [data-star^="0.3"]::after,
      [data-star^=".3"]::after {
        width: 6%;
      }
      [data-star^="0.4"]::after,
      [data-star^=".4"]::after {
        width: 8%;
      }
      [data-star^="0.5"]::after,
      [data-star^=".5"]::after {
        width: 10%;
      }
      [data-star^="0.6"]::after,
      [data-star^=".6"]::after {
        width: 12%;
      }
      [data-star^="0.7"]::after,
      [data-star^=".7"]::after {
        width: 14%;
      }
      [data-star^="0.8"]::after,
      [data-star^=".8"]::after {
        width: 16%;
      }
      [data-star^="0.9"]::after,
      [data-star^=".9"]::after {
        width: 18%;
      }
      [data-star^="1"]::after {
        width: 20%;
      }
      [data-star^="1.1"]::after {
        width: 22%;
      }
      [data-star^="1.2"]::after {
        width: 24%;
      }
      [data-star^="1.3"]::after {
        width: 26%;
      }
      [data-star^="1.4"]::after {
        width: 28%;
      }
      [data-star^="1.5"]::after {
        width: 30%;
      }
      [data-star^="1.6"]::after {
        width: 32%;
      }
      [data-star^="1.7"]::after {
        width: 34%;
      }
      [data-star^="1.8"]::after {
        width: 36%;
      }
      [data-star^="1.9"]::after {
        width: 38%;
      }
      [data-star^="2"]::after {
        width: 40%;
      }
      [data-star^="2.1"]::after {
        width: 42%;
      }
      [data-star^="2.2"]::after {
        width: 44%;
      }
      [data-star^="2.3"]::after {
        width: 46%;
      }
      [data-star^="2.4"]::after {
        width: 48%;
      }
      [data-star^="2.5"]::after {
        width: 50%;
      }
      [data-star^="2.6"]::after {
        width: 52%;
      }
      [data-star^="2.7"]::after {
        width: 54%;
      }
      [data-star^="2.8"]::after {
        width: 56%;
      }
      [data-star^="2.9"]::after {
        width: 58%;
      }
      [data-star^="3"]::after {
        width: 60%;
      }
      [data-star^="3.1"]::after {
        width: 62%;
      }
      [data-star^="3.2"]::after {
        width: 64%;
      }
      [data-star^="3.3"]::after {
        width: 66%;
      }
      [data-star^="3.4"]::after {
        width: 68%;
      }
      [data-star^="3.5"]::after {
        width: 70%;
      }
      [data-star^="3.6"]::after {
        width: 72%;
      }
      [data-star^="3.7"]::after {
        width: 74%;
      }
      [data-star^="3.8"]::after {
        width: 76%;
      }
      [data-star^="3.9"]::after {
        width: 78%;
      }
      [data-star^="4"]::after {
        width: 80%;
      }
      [data-star^="4.1"]::after {
        width: 82%;
      }
      [data-star^="4.2"]::after {
        width: 84%;
      }
      [data-star^="4.3"]::after {
        width: 86%;
      }
      [data-star^="4.4"]::after {
        width: 88%;
      }
      [data-star^="4.5"]::after {
        width: 90%;
      }
      [data-star^="4.6"]::after {
        width: 92%;
      }
      [data-star^="4.7"]::after {
        width: 94%;
      }
      [data-star^="4.8"]::after {
        width: 96%;
      }
      [data-star^="4.9"]::after {
        width: 98%;
      }
      [data-star^="5"]::after {
        width: 100%;
      }
}